package com.lhj.scrollerdemo;import android.os.Handler;import android.support.annotation.NonNull;import android.support.v4.view.GestureDetectorCompat;import android.support.v7.widget.RecyclerView;import android.view.GestureDetector;import android.view.MotionEvent;import android.view.View;import android.widget.RelativeLayout;/** * Created by lhj on 18/9/8 */public abstract class OnItemTouchListener implements RecyclerView.OnItemTouchListener {    private GestureDetectorCompat mGestureDetectorCompat;    private RecyclerView mRecyclerView;    private RecyclerView mBindRecyclerView;    public OnItemTouchListener(RecyclerView recyclerView) {        mRecyclerView = recyclerView;        mGestureDetectorCompat = new GestureDetectorCompat(mRecyclerView.getContext(),                new MyGestureListener());    }    public OnItemTouchListener(RecyclerView recyclerView, RecyclerView brecyclerView) {        mRecyclerView = recyclerView;        mBindRecyclerView = brecyclerView;        mGestureDetectorCompat = new GestureDetectorCompat(mRecyclerView.getContext(),                new MyGestureListener());    }    @Override    public boolean onInterceptTouchEvent(@NonNull RecyclerView recyclerView, @NonNull MotionEvent motionEvent) {        mGestureDetectorCompat.onTouchEvent(motionEvent);        return false;    }    @Override    public void onTouchEvent(@NonNull RecyclerView recyclerView, @NonNull MotionEvent motionEvent) {        mGestureDetectorCompat.onTouchEvent(motionEvent);    }    @Override    public void onRequestDisallowInterceptTouchEvent(boolean b) {    }    public abstract void onItemClick(RecyclerView.ViewHolder vh, int index);    public abstract void onItemLongClick(RecyclerView.ViewHolder vh, int index);    Handler handler = new Handler();    private class MyGestureListener extends GestureDetector.SimpleOnGestureListener {        @Override        public boolean onSingleTapUp(MotionEvent e) {            View childe = mRecyclerView.findChildViewUnder(e.getX(), e.getY());            if (childe != null) {                RecyclerView.ViewHolder VH = mRecyclerView.getChildViewHolder(childe);                int index = VH.getLayoutPosition();                setPressState(VH, index);                onItemClick(VH, index);            }            return true;        }        @Override        public void onLongPress(MotionEvent e) {            View childe = mRecyclerView.findChildViewUnder(e.getX(), e.getY());            if (childe != null) {                RecyclerView.ViewHolder VH = mRecyclerView.getChildViewHolder(childe);                int index = VH.getLayoutPosition();                setPressState(VH, index);                onItemLongClick(VH, index);            }        }        private void setPressState(RecyclerView.ViewHolder VH, int index) {            setPressedState(VH);            if (mBindRecyclerView != null) {                RecyclerView.ViewHolder BVH = mBindRecyclerView.findViewHolderForLayoutPosition(index);                setPressedState(BVH);            }        }        private void setPressedState(RecyclerView.ViewHolder VH) {            if (VH != null) {                if (VH instanceof NameItemAdapter.MyViewHolder) {                    setNameItemPressed(VH);                } else if (VH instanceof DataItemAdapter.MyViewHolder) {                    setDataItemPressed(VH);                }            }        }        private void setNameItemPressed(RecyclerView.ViewHolder VH) {            final NameItemAdapter.MyViewHolder viewHolder = (NameItemAdapter.MyViewHolder) VH;            setItemViewPressed(viewHolder.ItemView);        }        private void setDataItemPressed(RecyclerView.ViewHolder VH) {            final DataItemAdapter.MyViewHolder viewHolder = (DataItemAdapter.MyViewHolder) VH;            setItemViewPressed(viewHolder.ItemView);        }        private void setItemViewPressed(final View view) {            view.setPressed(true);            handler.postDelayed(new Runnable() {                @Override                public void run() {                    view.setPressed(false);                }            }, 100);        }    }}